Description: Backport 'Rename Error class to AmpError (fix php7 Error class name conflict)'
Author: Nishanth Aravamudan <nish.aravamudan@canonical.com>
Origin: upstream, https://github.com/ampache/ampache/commit/92fcb8467070733bc70e0e0dc6a6edd3bbb2a621
Bug-Ubuntu: https://launchpad.net/bugs/1578201
Bug: https://github.com/ampache/ampache/issues/1034

Index: ampache-alioth/admin/access.php
===================================================================
--- ampache-alioth.orig/admin/access.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/admin/access.php	2016-09-10 09:10:36.764514492 +0200
@@ -67,7 +67,7 @@
             Access::create($_POST);
         }
 
-        if (!Error::occurred()) {
+        if (!AmpError::occurred()) {
             $url = Config::get('web_path') . '/admin/access.php';
             show_confirmation(T_('Added'), T_('Your new Access Control List(s) have been created'),$url);
         }
@@ -83,7 +83,7 @@
         }
         $access = new Access($_REQUEST['access_id']);
         $access->update($_POST);
-        if (!Error::occurred()) {
+        if (!AmpError::occurred()) {
             show_confirmation(T_('Updated'), T_('Access List Entry updated'), Config::get('web_path').'/admin/access.php');
         }
         else {
Index: ampache-alioth/admin/catalog.php
===================================================================
--- ampache-alioth.orig/admin/catalog.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/admin/catalog.php	2016-09-10 09:10:36.764514492 +0200
@@ -200,14 +200,14 @@
         ob_end_flush();
 
         if (!strlen($_POST['path']) || !strlen($_POST['name'])) {
-            Error::add('general', T_('Error: Name and path not specified'));
+            AmpError::add('general', T_('Error: Name and path not specified'));
         }
 
         if (substr($_POST['path'],0,7) != 'http://' && $_POST['type'] == 'remote') {
-            Error::add('general', T_('Error: Remote selected, but path is not a URL'));
+            AmpError::add('general', T_('Error: Remote selected, but path is not a URL'));
         }
         if ($POST['type'] == 'remote' AND (!strlen($POST['remote_username']) OR !strlen($POST['remote_password']))) {
-            Error::add('general', T_('Error: Username and Password Required for Remote Catalogs'));
+            AmpError::add('general', T_('Error: Username and Password Required for Remote Catalogs'));
         }
 
         if (!Core::form_verify('add_catalog','post')) {
@@ -217,11 +217,11 @@
 
         // Make sure that there isn't a catalog with a directory above this one
         if (Catalog::get_from_path($_POST['path'])) {
-            Error::add('general', T_('Error: Defined Path is inside an existing catalog'));
+            AmpError::add('general', T_('Error: Defined Path is inside an existing catalog'));
         }
 
         // If an error hasn't occured
-        if (!Error::occurred()) {
+        if (!AmpError::occurred()) {
 
             $catalog_id = Catalog::create($_POST);
 
@@ -237,8 +237,8 @@
 
             UI::show_box_top(T_('Catalog Created'), 'box box_catalog_created');
             echo "<h2>" .  T_('Catalog Created') . "</h2>";
-            Error::display('general');
-            Error::display('catalog_add');
+            AmpError::display('general');
+            AmpError::display('catalog_add');
             UI::show_box_bottom();
 
             show_confirmation('','', Config::get('web_path').'/admin/catalog.php');
Index: ampache-alioth/admin/modules.php
===================================================================
--- ampache-alioth.orig/admin/modules.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/admin/modules.php	2016-09-10 09:10:36.764514492 +0200
@@ -35,8 +35,8 @@
     case 'install_localplay':
         $localplay = new Localplay($_REQUEST['type']);
         if (!$localplay->player_loaded()) {
-            Error::add('general', T_('Install Failed, Controller Error'));
-            Error::display('general');
+            AmpError::add('general', T_('Install Failed, Controller Error'));
+            AmpError::display('general');
             break;
         }
         // Install it!
Index: ampache-alioth/admin/users.php
===================================================================
--- ampache-alioth.orig/admin/users.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/admin/users.php	2016-09-10 09:10:36.764514492 +0200
@@ -53,14 +53,14 @@
 
         /* Verify Input */
         if (empty($username)) {
-            Error::add('username', T_("Error Username Required"));
+            AmpError::add('username', T_("Error Username Required"));
         }
         if ($pass1 !== $pass2 && !empty($pass1)) {
-            Error::add('password', T_("Error Passwords don't match"));
+            AmpError::add('password', T_("Error Passwords don't match"));
         }
 
         /* If we've got an error then break! */
-        if (Error::occurred()) {
+        if (AmpError::occurred()) {
             $_REQUEST['action'] = 'show_edit';
             break;
         } // if we've had an oops!
@@ -99,23 +99,23 @@
         $pass2        = $_POST['password_2'];
 
         if ($pass1 !== $pass2 || !strlen($pass1)) {
-            Error::add('password', T_("Error Passwords don't match"));
+            AmpError::add('password', T_("Error Passwords don't match"));
         }
 
         if (empty($username)) {
-            Error::add('username', T_('Error Username Required'));
+            AmpError::add('username', T_('Error Username Required'));
         }
 
         /* make sure the username doesn't already exist */
         if (!User::check_username($username)) {
-            Error::add('username', T_('Error Username already exists'));
+            AmpError::add('username', T_('Error Username already exists'));
         }
 
-        if (!Error::occurred()) {
+        if (!AmpError::occurred()) {
             /* Attempt to create the user */
             $user_id = User::create($username, $fullname, $email, $pass1, $access);
             if (!$user_id) {
-                Error::add('general', T_("Error: Insert Failed"));
+                AmpError::add('general', T_("Error: Insert Failed"));
             }
 
         } // if no errors
Index: ampache-alioth/bin/install/install_db.inc
===================================================================
--- ampache-alioth.orig/bin/install/install_db.inc	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/bin/install/install_db.inc	2016-09-10 09:10:36.764514492 +0200
@@ -87,7 +87,7 @@
 // Install the database
 if (!install_insert_db($new_db_user, $new_db_pass, $force)) { 
     echo T_('Database creation failed'), "\n"; 
-    echo Error::get('general'), "\n\n"; 
+    echo AmpError::get('general'), "\n\n"; 
     exit(1); 
 } 
 
@@ -99,7 +99,7 @@
 // Write the config file
 if (!install_create_config()) { 
     echo T_('Config file creation failed'), "\n"; 
-    echo Error::get('general') . "\n\n"; 
+    echo AmpError::get('general') . "\n\n"; 
     exit(1); 
 } 
 
Index: ampache-alioth/install.php
===================================================================
--- ampache-alioth.orig/install.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/install.php	2016-09-10 09:10:36.764514492 +0200
@@ -91,7 +91,7 @@
             $new_pass = $_POST['db_password'];
         }
         if (!strlen($new_user) || !strlen($new_pass)) {
-            Error::add('general', T_('Error: Ampache SQL Username or Password missing'));
+            AmpError::add('general', T_('Error: Ampache SQL Username or Password missing'));
             require_once 'templates/show_install.inc.php';
             break;
         }
@@ -132,7 +132,7 @@
 
         /* Make sure we've got a valid config file */
         if (!check_config_values($results)) {
-            Error::add('general', T_('Error: Config file not found or unreadable'));
+            AmpError::add('general', T_('Error: Config file not found or unreadable'));
             require_once Config::get('prefix') . '/templates/show_install_config.inc.php';
             break;
         }
Index: ampache-alioth/lib/class/access.class.php
===================================================================
--- ampache-alioth.orig/lib/class/access.class.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/lib/class/access.class.php	2016-09-10 09:10:36.764514492 +0200
@@ -98,16 +98,16 @@
         $endn = @inet_pton($endp);
 
         if (!$startn && $startp != '0.0.0.0' && $startp != '::') {
-            Error::add('start', T_('Invalid IPv4 / IPv6 Address Entered'));
+            AmpError::add('start', T_('Invalid IPv4 / IPv6 Address Entered'));
             return false;
         }
         if (!$endn) {
-            Error::add('end', T_('Invalid IPv4 / IPv6 Address Entered'));
+            AmpError::add('end', T_('Invalid IPv4 / IPv6 Address Entered'));
         }
 
         if (strlen(bin2hex($startn)) != strlen(bin2hex($endn))) {
-            Error::add('start', T_('IP Address Version Mismatch'));
-            Error::add('end', T_('IP Address Version Mismatch'));
+            AmpError::add('start', T_('IP Address Version Mismatch'));
+            AmpError::add('end', T_('IP Address Version Mismatch'));
             return false;
         }
 
@@ -155,7 +155,7 @@
         // Check existing ACLs to make sure we're not duplicating values here
         if (self::exists($data)) {
             debug_event('ACL Create', 'Error: An ACL equal to the created one already exists. Not adding another one: ' . $data['start'] . ' - ' . $data['end'], 1);
-            Error::add('general', T_('Duplicate ACL defined'));
+            AmpError::add('general', T_('Duplicate ACL defined'));
             return false;
         }
 
Index: ampache-alioth/lib/class/amperror.class.php
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ ampache-alioth/lib/class/amperror.class.php	2016-09-10 09:10:36.764514492 +0200
@@ -0,0 +1,139 @@
+<?php
+/* vim:set softtabstop=4 shiftwidth=4 expandtab: */
+/**
+ *
+ * LICENSE: GNU General Public License, version 2 (GPLv2)
+ * Copyright 2001 - 2013 Ampache.org
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License v2
+ * as published by the Free Software Foundation.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANT ABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+ *
+ */
+
+/**
+ * Error class
+ *
+ * This is the baic error class, its better now that we can use php5
+ * hello static functions and variables
+ *
+ */
+class AmpError {
+
+    private static $state = false; // set to one when an error occurs
+    private static $errors = array(); // Errors array key'd array with errors that have occured
+
+    /**
+     * __constructor
+     * This does nothing... amazing isn't it!
+     */
+    private function __construct() {
+
+        // Rien a faire
+
+    } // __construct
+
+    /**
+     * __destruct
+     * This saves all of the errors that are left into the session
+     */
+    public function __destruct() {
+
+
+        foreach (self::$errors as $key=>$error) {
+            $_SESSION['errors'][$key] = $error;
+        }
+
+    } // __destruct
+
+    /**
+     * add
+     * This is a public static function it adds a new error message to the array
+     * It can optionally clobber rather then adding to the error message
+     */
+    public static function add($name,$message,$clobber=0) {
+
+        // Make sure its set first
+        if (!isset(AmpError::$errors[$name])) {
+            AmpError::$errors[$name] = $message;
+            AmpError::$state = 1;
+            $_SESSION['errors'][$name] = $message;
+        }
+        // They want us to clobber it
+        elseif ($clobber) {
+            AmpError::$state = 1;
+            AmpError::$errors[$name] = $message;
+            $_SESSION['errors'][$name] = $message;
+        }
+        // They want us to append the error, add a BR\n and then the message
+        else {
+            AmpError::$state = 1;
+            AmpError::$errors[$name] .= "<br />\n" . $message;
+            $_SESSION['errors'][$name] .=  "<br />\n" . $message;
+        }
+
+    } // add
+
+    /**
+     * occurred
+     * This returns true / false if an error has occured anywhere
+     */
+    public static function occurred() {
+
+        if (self::$state == '1') { return true; }
+
+        return false;
+
+    } // occurred
+
+    /**
+     * get
+     * This returns an error by name
+     */
+    public static function get($name) {
+
+        if (!isset(AmpError::$errors[$name])) { return ''; }
+
+        return AmpError::$errors[$name];
+
+    } // get
+
+    /**
+     * display
+     * This prints the error out with a standard Error class span
+     * Ben Goska: Renamed from print to display, print is reserved
+     */
+    public static function display($name) {
+
+        // Be smart about this, if no error don't print
+        if (!isset(AmpError::$errors[$name])) { return ''; }
+
+        echo '<span class="error">' . AmpError::$errors[$name] . '</span>';
+
+    } // display
+
+    /**
+      * auto_init
+     * This loads the errors from the session back into Ampache
+     */
+    public static function auto_init() {
+
+        if (!is_array($_SESSION['errors'])) { return false; }
+
+        // Re-insert them
+        foreach ($_SESSION['errors'] as $key=>$error) {
+            self::add($key,$error);
+        }
+
+    } // auto_init
+
+} // Error
Index: ampache-alioth/lib/class/api.class.php
===================================================================
--- ampache-alioth.orig/lib/class/api.class.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/lib/class/api.class.php	2016-09-10 09:10:36.764514492 +0200
@@ -122,7 +122,7 @@
 
         if (intval($version) < self::$version) {
             debug_event('API', 'Login Failed: version too old', 1);
-            Error::add('api', T_('Login Failed: version too old'));
+            AmpError::add('api', T_('Login Failed: version too old'));
             return false;
         }
 
@@ -130,7 +130,7 @@
         if (($timestamp < (time() - 1800)) || 
             ($timestamp > (time() + 1800))) {
             debug_event('API', 'Login Failed: timestamp out of range', 1);
-            Error::add('api', T_('Login Failed: timestamp out of range'));
+            AmpError::add('api', T_('Login Failed: timestamp out of range'));
             return false;
         }
 
@@ -158,7 +158,7 @@
 
             if (!$row['password']) {
                 debug_event('API', 'Unable to find user with userid of ' . $user_id, 1);
-                Error::add('api', T_('Invalid Username/Password'));
+                AmpError::add('api', T_('Invalid Username/Password'));
                 return false;
             }
 
Index: ampache-alioth/lib/class/art.class.php
===================================================================
--- ampache-alioth.orig/lib/class/art.class.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/lib/class/art.class.php	2016-09-10 09:10:36.764514492 +0200
@@ -989,7 +989,7 @@
             $handle = opendir($dir);
 
             if (!$handle) {
-                Error::add('general', T_('Error: Unable to open') . ' ' . $dir);
+                AmpError::add('general', T_('Error: Unable to open') . ' ' . $dir);
                 debug_event('folder_art', "Error: Unable to open $dir for album art read", 2);
                 continue;
             }
Index: ampache-alioth/lib/class/catalog.class.php
===================================================================
--- ampache-alioth.orig/lib/class/catalog.class.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/lib/class/catalog.class.php	2016-09-10 09:10:36.768514516 +0200
@@ -219,7 +219,7 @@
         if ($data['type'] == 'local') {
             if (!Core::is_readable($path)) {
                 debug_event('catalog', 'Cannot add catalog at unopenable path ' . $path, 1);
-                Error::add('general', sprintf(T_('Error: %s is not readable or does not exist'), scrub_out($data['path'])));
+                AmpError::add('general', sprintf(T_('Error: %s is not readable or does not exist'), scrub_out($data['path'])));
                 return false;
             }
         }
@@ -230,7 +230,7 @@
 
         if (Dba::num_rows($db_results)) {
             debug_event('catalog', 'Cannot add catalog with duplicate path ' . $path, 1);
-            Error::add('general', sprintf(T_('Error: Catalog with %s already exists'), $path));
+            AmpError::add('general', sprintf(T_('Error: Catalog with %s already exists'), $path));
             return false;
         }
 
@@ -257,7 +257,7 @@
         $insert_id = Dba::insert_id();
 
         if (!$insert_id) {
-            Error::add('general', T_('Catalog Insert Failed check debug logs'));
+            AmpError::add('general', T_('Catalog Insert Failed check debug logs'));
             debug_event('catalog', 'Insert failed: ' . json_encode($data), 2);
             return false;
         }
@@ -407,14 +407,14 @@
 
         if (!is_resource($handle)) {
             debug_event('read', "Unable to open $path", 5);
-            Error::add('catalog_add', sprintf(T_('Error: Unable to open %s'), $path));
+            AmpError::add('catalog_add', sprintf(T_('Error: Unable to open %s'), $path));
             return false;
         }
 
         /* Change the dir so is_dir works correctly */
         if (!chdir($path)) {
             debug_event('read', "Unable to chdir to $path", 2);
-            Error::add('catalog_add', sprintf(T_('Error: Unable to change to directory %s'), $path));
+            AmpError::add('catalog_add', sprintf(T_('Error: Unable to change to directory %s'), $path));
             return false;
         }
 
@@ -460,7 +460,7 @@
                 /* Change the dir so is_dir works correctly */
                 if (!chdir($path)) {
                     debug_event('read', "Unable to chdir to $path", 2);
-                    Error::add('catalog_add', sprintf(T_('Error: Unable to change to directory %s'), $path));
+                    AmpError::add('catalog_add', sprintf(T_('Error: Unable to change to directory %s'), $path));
                 }
 
                 /* Skip to the next file */
@@ -496,14 +496,14 @@
                 if (!$file_size) {
                     debug_event('read', "Unable to get filesize for $full_file", 2);
                     /* HINT: FullFile */
-                    Error::add('catalog_add', sprintf(T_('Error: Unable to get filesize for %s'), $full_file));
+                    AmpError::add('catalog_add', sprintf(T_('Error: Unable to get filesize for %s'), $full_file));
                 } // file_size check
 
                 if (!Core::is_readable($full_file)) {
                     // not readable, warn user
                     debug_event('read', "$full_file is not readable by ampache", 2);
                     /* HINT: FullFile */
-                    Error::add('catalog_add', sprintf(T_('%s is not readable by ampache'), $full_file));
+                    AmpError::add('catalog_add', sprintf(T_('%s is not readable by ampache'), $full_file));
                     continue;
                 }
 
@@ -512,7 +512,7 @@
                     if (strcmp($full_file,iconv(Config::get('site_charset'),Config::get('site_charset'),$full_file)) != '0') {
                         debug_event('read',$full_file . ' has non-' . Config::get('site_charset') . ' characters and can not be indexed, converted filename:' . iconv(Config::get('site_charset'),Config::get('site_charset'),$full_file),'1');
                         /* HINT: FullFile */
-                        Error::add('catalog_add', sprintf(T_('%s does not match site charset'), $full_file));
+                        AmpError::add('catalog_add', sprintf(T_('%s does not match site charset'), $full_file));
                         continue;
                     }
                 } // end if iconv
@@ -1049,16 +1049,16 @@
                 'debug_callback' => 'debug_event'
             ));
         } catch (Exception $e) {
-            Error::add('general', $e->getMessage());
-            Error::display('general');
+            AmpError::add('general', $e->getMessage());
+            AmpError::display('general');
             flush();
             return false;
         }
 
         if ($remote_handle->state() != 'CONNECTED') {
             debug_event('catalog', 'API client failed to connect', 1);
-            Error::add('general', T_('Error connecting to remote server'));
-            Error::display('general');
+            AmpError::add('general', T_('Error connecting to remote server'));
+            AmpError::display('general');
             return false;
         }
 
@@ -1096,8 +1096,8 @@
                 $songs = $remote_handle->send_command('songs', array('offset' => $start, 'limit' => $step));
             }
             catch (Exception $e) {
-                Error::add('general',$e->getMessage());
-                Error::display('general');
+                AmpError::add('general',$e->getMessage());
+                AmpError::display('general');
                 flush();
             }
 
@@ -1111,8 +1111,8 @@
                     $data['song']['file'] = preg_replace('/ssid=.*?&/', '', $data['song']['url']);
                     if (!Song::insert($data['song'])) {
                         debug_event('remote_catalog', 'Insert failed for ' . $data['song']['self']['id'], 1);
-                        Error::add('general', T_('Unable to Insert Song - %s'), $data['song']['title']);
-                        Error::display('general');
+                        AmpError::add('general', T_('Unable to Insert Song - %s'), $data['song']['title']);
+                        AmpError::display('general');
                         flush();
                     }
                 }
@@ -1177,8 +1177,8 @@
             // First sanity check; no point in proceeding with an unreadable
             // catalog root.
             debug_event('catalog', 'Catalog path:' . $this->path . ' unreadable, clean failed', 1);
-            Error::add('general', T_('Catalog Root unreadable, stopping clean'));
-            Error::display('general');
+            AmpError::add('general', T_('Catalog Root unreadable, stopping clean'));
+            AmpError::display('general');
             return 0;
         }
 
@@ -1200,7 +1200,7 @@
             // Never remove everything; it might be a dead mount
             if ($dead_count >= $total) {
                 debug_event('catalog', 'All files would be removed. Doing nothing.', 1);
-                Error::add('general', T_('All files would be removed. Doing nothing'));
+                AmpError::add('general', T_('All files would be removed. Doing nothing'));
                 continue;
             }
             if ($dead_count) {
@@ -1279,7 +1279,7 @@
             $file_info = filesize($results['file']);
             if (!file_exists($results['file']) || $file_info < 1) {
                 debug_event('clean', 'File not found or empty: ' . $results['file'], 5);
-                Error::add('general', sprintf(T_('Error File Not Found or 0 Bytes: %s'), $results['file']));
+                AmpError::add('general', sprintf(T_('Error File Not Found or 0 Bytes: %s'), $results['file']));
 
 
                 // Store it in an array we'll delete it later...
@@ -1372,7 +1372,7 @@
             }
 
             if (!Core::is_readable($row['file'])) {
-                Error::add('general', sprintf(T_('%s does not exist or is not readable'), $row['file']));
+                AmpError::add('general', sprintf(T_('%s does not exist or is not readable'), $row['file']));
                 debug_event('read', $row['file'] . ' does not exist or is not readable', 5);
                 continue;
             }
Index: ampache-alioth/lib/class/config.class.php
===================================================================
--- ampache-alioth.orig/lib/class/config.class.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/lib/class/config.class.php	2016-09-10 09:10:36.768514516 +0200
@@ -72,7 +72,7 @@
     public static function set($name, $value, $clobber = false) {
         if (isset(self::$_global[$name]) && !$clobber) {
             debug_event('Config', "Tried to overwrite existing key $name without setting clobber", 5);
-            Error::add('Config Global', sprintf(T_('Trying to clobber \'%s\' without setting clobber'), $name));
+            AmpError::add('Config Global', sprintf(T_('Trying to clobber \'%s\' without setting clobber'), $name));
             return false;
         }
         
Index: ampache-alioth/lib/class/query.class.php
===================================================================
--- ampache-alioth.orig/lib/class/query.class.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/lib/class/query.class.php	2016-09-10 09:10:36.768514516 +0200
@@ -75,7 +75,7 @@
             return true;
         }
 
-        Error::add('browse', T_('Browse not found or expired, try reloading the page'));
+        AmpError::add('browse', T_('Browse not found or expired, try reloading the page'));
         return false;
     }
 
Index: ampache-alioth/lib/class/radio.class.php
===================================================================
--- ampache-alioth.orig/lib/class/radio.class.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/lib/class/radio.class.php	2016-09-10 09:10:36.768514516 +0200
@@ -82,11 +82,11 @@
 
         // Verify the incoming data
         if (!$data['id']) {
-            Error::add('general', T_('Missing ID'));
+            AmpError::add('general', T_('Missing ID'));
         }
 
         if (!$data['name']) {
-            Error::add('general', T_('Name Required'));
+            AmpError::add('general', T_('Name Required'));
         }
 
         $allowed_array = array('https','http','mms','mmsh','mmsu','mmst','rtsp');
@@ -94,10 +94,10 @@
         $elements = explode(":",$data['url']);
 
         if (!in_array($elements['0'],$allowed_array)) {
-            Error::add('general', T_('Invalid URL must be mms:// , https:// or http://'));
+            AmpError::add('general', T_('Invalid URL must be mms:// , https:// or http://'));
         }
 
-        if (Error::occurred()) {
+        if (AmpError::occurred()) {
             return false;
         }
 
@@ -126,7 +126,7 @@
 
         // Make sure we've got a name
         if (!strlen($data['name'])) {
-            Error::add('name', T_('Name Required'));
+            AmpError::add('name', T_('Name Required'));
         }
 
         $allowed_array = array('https','http','mms','mmsh','mmsu','mmst','rtsp');
@@ -134,16 +134,16 @@
         $elements = explode(":",$data['url']);
 
         if (!in_array($elements['0'],$allowed_array)) {
-            Error::add('url', T_('Invalid URL must be http:// or https://'));
+            AmpError::add('url', T_('Invalid URL must be http:// or https://'));
         }
 
         // Make sure it's a real catalog
         $catalog = new Catalog($data['catalog']);
         if (!$catalog->name) {
-            Error::add('catalog', T_('Invalid Catalog'));
+            AmpError::add('catalog', T_('Invalid Catalog'));
         }
 
-        if (Error::occurred()) { return false; }
+        if (AmpError::occurred()) { return false; }
 
         // Clean up the input
         $name        = Dba::escape($data['name']);
Index: ampache-alioth/lib/class/update.class.php
===================================================================
--- ampache-alioth.orig/lib/class/update.class.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/lib/class/update.class.php	2016-09-10 09:10:36.768514516 +0200
@@ -446,7 +446,7 @@
                         self::set_version('db_version', $version['version']);
                     }
                     else {
-                        Error::display('update');
+                        AmpError::display('update');
                         return false;
                     }
                 }
Index: ampache-alioth/lib/class/user.class.php
===================================================================
--- ampache-alioth.orig/lib/class/user.class.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/lib/class/user.class.php	2016-09-10 09:10:36.768514516 +0200
@@ -419,14 +419,14 @@
      */
     public function update($data) {
         if (empty($data['username'])) {
-            Error::add('username', T_('Error Username Required'));
+            AmpError::add('username', T_('Error Username Required'));
         }
 
         if ($data['password1'] != $data['password2'] AND !empty($data['password1'])) {
-            Error::add('password', T_("Error Passwords don't match"));
+            AmpError::add('password', T_("Error Passwords don't match"));
         }
 
-        if (Error::occurred()) {
+        if (AmpError::occurred()) {
             return false;
         }
 
Index: ampache-alioth/lib/install.lib.php
===================================================================
--- ampache-alioth.orig/lib/install.lib.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/lib/install.lib.php	2016-09-10 09:10:36.768514516 +0200
@@ -69,7 +69,7 @@
     if (!file_exists($configfile)) {
         return true;
     } else {
-        Error::add('general', T_('Config file already exists, install is probably completed'));
+        AmpError::add('general', T_('Config file already exists, install is probably completed'));
     }
 
     /*
@@ -80,7 +80,7 @@
     Config::set_by_array($results, true);
 
     if (!Dba::check_database()) {
-        Error::add('general', T_('Unable to connect to database, check your ampache config'));
+        AmpError::add('general', T_('Unable to connect to database, check your ampache config'));
         return false;
     }
 
@@ -88,7 +88,7 @@
     $db_results = Dba::read($sql);
 
     if (!$db_results) {
-        Error::add('general', T_('Unable to query database, check your ampache config'));
+        AmpError::add('general', T_('Unable to query database, check your ampache config'));
         return false;
     }
 
@@ -96,7 +96,7 @@
         return true;
     }
     else {
-        Error::add('general', T_('Existing Database detected, unable to continue installation'));
+        AmpError::add('general', T_('Existing Database detected, unable to continue installation'));
         return false;
     }
 
@@ -116,12 +116,12 @@
     $is_valid = preg_match('/([^\d\w\_\-])/', $database, $matches);
 
     if (count($matches)) {
-        Error::add('general', T_('Error: Invalid database name.'));
+        AmpError::add('general', T_('Error: Invalid database name.'));
         return false;
     }
 
     if (!Dba::check_database()) {
-        Error::add('general', sprintf(T_('Error: Unable to make database connection: %s'), Dba::error()));
+        AmpError::add('general', sprintf(T_('Error: Unable to make database connection: %s'), Dba::error()));
         return false;
     }
 
@@ -136,14 +136,14 @@
             Dba::write('DROP DATABASE `' . $database . '`');
         }
         else {
-            Error::add('general', T_('Error: Database already exists and overwrite not checked'));
+            AmpError::add('general', T_('Error: Database already exists and overwrite not checked'));
             return false;
         }
     }
 
     if ($create_db) {
         if (!Dba::write('CREATE DATABASE `' . $database . '`')) {
-            Error::add('general', sprintf(T_('Error: Unable to create database: %s'), Dba::error()));
+            AmpError::add('general', sprintf(T_('Error: Unable to create database: %s'), Dba::error()));
             return false;
         }
     }
@@ -160,7 +160,7 @@
         }
         $sql .= "IDENTIFIED BY '" . Dba::escape($db_pass) . "' WITH GRANT OPTION";
         if (!Dba::write($sql)) {
-            Error::add('general', sprintf(T_('Error: Unable to create user %1$s with permissions to %2$s on %3$s: %4$s'), $db_user, $database, $db_host, Dba::error()));
+            AmpError::add('general', sprintf(T_('Error: Unable to create user %1$s with permissions to %2$s on %3$s: %4$s'), $db_user, $database, $db_host, Dba::error()));
             return false;
         }
     } // end if we are creating a user
@@ -207,7 +207,7 @@
 
     // Connect to the DB
     if(!Dba::check_database()) {
-        Error::add('general', T_("Database Connection Failed Check Hostname, Username and Password"));
+        AmpError::add('general', T_("Database Connection Failed Check Hostname, Username and Password"));
         return false;
     }
 
@@ -216,13 +216,13 @@
     // Make sure the directory is writable OR the empty config file is
     if (!$download) {
         if (!check_config_writable()) {
-            Error::add('general', T_('Config file is not writable'));
+            AmpError::add('general', T_('Config file is not writable'));
             return false;
         }
         else {
             // Given that $final is > 0, we can ignore lazy comparison problems
             if (!file_put_contents($config_file, $final)) {
-                Error::add('general', T_('Error writing config file'));
+                AmpError::add('general', T_('Error writing config file'));
                 return false;
             }
         }
@@ -244,22 +244,22 @@
 function install_create_account($username, $password, $password2) {
 
     if (!strlen($username) OR !strlen($password)) {
-        Error::add('general', T_('No Username/Password specified'));
+        AmpError::add('general', T_('No Username/Password specified'));
         return false;
     }
 
     if ($password !== $password2) {
-        Error::add('general', T_('Passwords do not match'));
+        AmpError::add('general', T_('Passwords do not match'));
         return false;
     }
 
     if (!Dba::check_database()) {
-        Error::add('general', sprintf(T_('Database connection failed: %s'), Dba::error()));
+        AmpError::add('general', sprintf(T_('Database connection failed: %s'), Dba::error()));
         return false;
     }
 
     if (!Dba::check_database_inserted()) {
-        Error::add('general', sprintf(T_('Database select failed: %s'), Dba::error()));
+        AmpError::add('general', sprintf(T_('Database select failed: %s'), Dba::error()));
         return false;
     }
 
@@ -269,7 +269,7 @@
     $insert_id = User::create($username,'Administrator','',$password,'100');
 
     if (!$insert_id) {
-        Error::add('general', sprintf(T_('Administrative user creation failed: %s'), Dba::error()));
+        AmpError::add('general', sprintf(T_('Administrative user creation failed: %s'), Dba::error()));
         return false;
     }
 
Index: ampache-alioth/login.php
===================================================================
--- ampache-alioth.orig/login.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/login.php	2016-09-10 09:10:36.768514516 +0200
@@ -84,14 +84,14 @@
         }
         else {
             debug_event('Login', scrub_out($username) . ' attempted to login and failed', '1');
-            Error::add('general', T_('Error Username or Password incorrect, please try again'));
+            AmpError::add('general', T_('Error Username or Password incorrect, please try again'));
         }
 
         $user = User::get_from_username($username);
 
         if ($user->disabled) {
             $auth['success'] = false;
-            Error::add('general', T_('User Disabled please contact Admin'));
+            AmpError::add('general', T_('User Disabled please contact Admin'));
             debug_event('Login', scrub_out($username) . ' is disabled and attempted to login', '1');
         } // if user disabled
         elseif (Config::get('prevent_multiple_logins')) {
@@ -99,7 +99,7 @@
             $current_ip = inet_pton($_SERVER['REMOTE_ADDR']);
             if ($current_ip && ($current_ip != $session_ip)) {
                 $auth['success'] = false;
-                Error::add('general', T_('User Already Logged in'));
+                AmpError::add('general', T_('User Already Logged in'));
                 debug_event('Login', scrub_out($username) . ' is already logged in from ' . $session_ip . ' and attempted to login from ' . $current_ip, '1');
             } // if logged in multiple times
         } // if prevent multiple logins
@@ -120,7 +120,7 @@
             }
             else {
                 $auth['success'] = false;
-                Error::add('general', T_('Unable to create local account'));
+                AmpError::add('general', T_('Unable to create local account'));
             }
         } // End if auto_create
 
Index: ampache-alioth/lostpassword.php
===================================================================
--- ampache-alioth.orig/lostpassword.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/lostpassword.php	2016-09-10 09:10:36.768514516 +0200
@@ -36,9 +36,9 @@
             $result = send_newpassword($email, $current_ip);
         }
         if ($result) {
-            Error::add('general', T_('Password has been sent'));
+            AmpError::add('general', T_('Password has been sent'));
         } else {
-            Error::add('general', T_('Password has not been sent'));
+            AmpError::add('general', T_('Password has not been sent'));
         }
 
         require Config::get('prefix') . '/templates/show_login_form.inc.php';
Index: ampache-alioth/preferences.php
===================================================================
--- ampache-alioth.orig/preferences.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/preferences.php	2016-09-10 09:10:36.768514516 +0200
@@ -110,7 +110,7 @@
         $_POST['username'] = $GLOBALS['user']->username;
 
         if (!$GLOBALS['user']->update($_POST)) {
-            Error::add('general', T_('Error Update Failed'));
+            AmpError::add('general', T_('Error Update Failed'));
         }
         else {
             $_REQUEST['action'] = 'confirm';
Index: ampache-alioth/register.php
===================================================================
--- ampache-alioth.orig/register.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/register.php	2016-09-10 09:10:36.768514516 +0200
@@ -64,51 +64,51 @@
         if (Config::get('captcha_public_reg')) {
                 $captcha         = captcha::solved();
             if(!isset ($captcha)) {
-                Error::add('captcha', T_('Error Captcha Required'));
+                AmpError::add('captcha', T_('Error Captcha Required'));
             }
             if (isset ($captcha)) {
                 if ($captcha) {
                     $msg="SUCCESS";
                 }
                     else {
-                        Error::add('captcha', T_('Error Captcha Failed'));
+                        AmpError::add('captcha', T_('Error Captcha Failed'));
                     }
             } // end if we've got captcha
         } // end if it's enabled
 
         if (Config::get('user_agreement')) {
             if (!$_POST['accept_agreement']) {
-                Error::add('user_agreement', T_("You <U>must</U> accept the user agreement"));
+                AmpError::add('user_agreement', T_("You <U>must</U> accept the user agreement"));
             }
         } // if they have to agree to something
 
         if (!$_POST['username']) {
-            Error::add('username', T_("You did not enter a username"));
+            AmpError::add('username', T_("You did not enter a username"));
         }
 
         if(!$fullname) {
-            Error::add('fullname', T_("Please fill in your full name (Firstname Lastname)"));
+            AmpError::add('fullname', T_("Please fill in your full name (Firstname Lastname)"));
         }
 
         // Check the mail for correct address formation.
         if (!Mailer::validate_address($email)) { 
-            Error::add('email', T_('Invalid email address')
+            AmpError::add('email', T_('Invalid email address')
         }
 
         if (!$pass1) {
-            Error::add('password', T_("You must enter a password"));
+            AmpError::add('password', T_("You must enter a password"));
         }
 
         if ( $pass1 != $pass2 ) {
-            Error::add('password', T_("Your passwords do not match"));
+            AmpError::add('password', T_("Your passwords do not match"));
         }
 
         if (!User::check_username($username)) {
-            Error::add('duplicate_user', T_("Error Username already exists"));
+            AmpError::add('duplicate_user', T_("Error Username already exists"));
         }
 
         // If we've hit an error anywhere up there break!
-        if (Error::occurred()) {
+        if (AmpError::occurred()) {
             require_once Config::get('prefix') . '/templates/show_user_registration.inc.php';
             break;
         }
@@ -133,7 +133,7 @@
             $access, Config::get('admin_enable_required'));
 
         if (!$new_user) {
-            Error::add('duplicate_user', T_("Error: Insert Failed"));
+            AmpError::add('duplicate_user', T_("Error: Insert Failed"));
             require_once Config::get('prefix') . '/templates/show_user_registration.inc.php';
             break;
         }
Index: ampache-alioth/shout.php
===================================================================
--- ampache-alioth.orig/shout.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/shout.php	2016-09-10 09:10:36.768514516 +0200
@@ -46,8 +46,8 @@
         $object = Shoutbox::get_object($_REQUEST['type'],$_REQUEST['id']);
 
         if (!$object->id) {
-            Error::add('general', T_('Invalid Object Selected'));
-            Error::display('general');
+            AmpError::add('general', T_('Invalid Object Selected'));
+            AmpError::display('general');
             break;
         }
 
Index: ampache-alioth/templates/error_page.inc.php
===================================================================
--- ampache-alioth.orig/templates/error_page.inc.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/templates/error_page.inc.php	2016-09-10 09:10:36.768514516 +0200
@@ -48,7 +48,7 @@
         <?php echo (T_("The folowing error has occured, you will automaticly be redirected after 10 seconds.") ); ?>
         <br /><br />
         <?php echo(T_("Error messages"));?>:<br />
-        <?php Error::display('general'); ?>
+        <?php AmpError::display('general'); ?>
     </div>
 </div>
 </body>
Index: ampache-alioth/templates/show_account.inc.php
===================================================================
--- ampache-alioth.orig/templates/show_account.inc.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/templates/show_account.inc.php	2016-09-10 09:10:36.768514516 +0200
@@ -22,7 +22,7 @@
 
 // Because this is a reset of the persons password make the form a little more secure
 ?>
-<?php Error::display('general'); ?>
+<?php AmpError::display('general'); ?>
 <form method="post" name="preferences" action="<?php echo Config::get('web_path'); ?>/preferences.php?action=update_user" enctype="multipart/form-data">
 <table class="tabledata">
 <tr>
@@ -40,7 +40,7 @@
 <tr>
     <td><?php echo T_('New Password'); ?>:</td>
     <td>
-        <?php Error::display('password'); ?>
+        <?php AmpError::display('password'); ?>
         <input type="password" name="password1" size="27" />
     </td>
 </tr>
Index: ampache-alioth/templates/show_add_access.inc.php
===================================================================
--- ampache-alioth.orig/templates/show_add_access.inc.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/templates/show_add_access.inc.php	2016-09-10 09:10:36.768514516 +0200
@@ -20,7 +20,7 @@
  */
 ?>
 <?php UI::show_box_top(T_('Add Access Control List'), 'box box_add_access'); ?>
-<?php Error::display('general'); ?>
+<?php AmpError::display('general'); ?>
 <form name="update_access" method="post" enctype="multipart/form-data" action="<?php echo Config::get('web_path'); ?>/admin/access.php?action=add_host">
 <table class="tabledata" cellpadding="5" cellspacing="0">
 <tr>
@@ -78,7 +78,7 @@
 <tr>
     <td><?php echo T_('Start'); ?>:</td>
     <td>
-        <?php Error::display('start'); ?>
+        <?php AmpError::display('start'); ?>
         <input type="text" name="start" value="<?php 
         if($action == 'show_add_current') {
             echo scrub_out($_SERVER['REMOTE_ADDR']);
@@ -89,7 +89,7 @@
     </td>
     <td><?php echo T_('End'); ?>:</td>
     <td>
-        <?php Error::display('end'); ?>
+        <?php AmpError::display('end'); ?>
         <input type="text" name="end" value="<?php 
         if($action == 'show_add_current') {
             echo scrub_out($_SERVER['REMOTE_ADDR']);
Index: ampache-alioth/templates/show_add_catalog.inc.php
===================================================================
--- ampache-alioth.orig/templates/show_add_catalog.inc.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/templates/show_add_catalog.inc.php	2016-09-10 09:10:36.768514516 +0200
@@ -25,7 +25,7 @@
 ?>
 <?php UI::show_box_top(T_('Add a Catalog'), 'box box_add_catalog'); ?>
 <p><?php echo T_("In the form below enter either a local path (i.e. /data/music) or the URL to a remote Ampache installation (i.e http://theotherampache.com)"); ?></p>
-<?php Error::display('general'); ?>
+<?php AmpError::display('general'); ?>
 <form name="update_catalog" method="post" action="<?php echo Config::get('web_path'); ?>/admin/catalog.php" enctype="multipart/form-data">
 <table class="tabledata" cellpadding="0" cellspacing="0">
 <tr>
Index: ampache-alioth/templates/show_add_live_stream.inc.php
===================================================================
--- ampache-alioth.orig/templates/show_add_live_stream.inc.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/templates/show_add_live_stream.inc.php	2016-09-10 09:10:36.768514516 +0200
@@ -27,21 +27,21 @@
     <td><?php echo T_('Name'); ?></td>
     <td>
         <input type="text" name="name" size="20" value="<?php echo scrub_out($_REQUEST['name']); ?>" />
-        <?php Error::display('name'); ?>
+        <?php AmpError::display('name'); ?>
     </td>
 </tr>
 <tr>
     <td><?php echo T_('Homepage'); ?></td>
     <td>
         <input type="text" name="site_url" value="<?php echo scrub_out($_REQUEST['site_url']); ?>" />
-        <?php Error::display('site_url'); ?>
+        <?php AmpError::display('site_url'); ?>
     </td>
 </tr>
 <tr>
     <td><?php echo T_('Stream URL'); ?></td>
     <td>
         <input type="text" name="url" value="<?php echo scrub_out($_REQUEST['url']); ?>" />
-        <?php Error::display('url'); ?>
+        <?php AmpError::display('url'); ?>
     </td>
 </tr>
 <tr>
Index: ampache-alioth/templates/show_add_user.inc.php
===================================================================
--- ampache-alioth.orig/templates/show_add_user.inc.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/templates/show_add_user.inc.php	2016-09-10 09:10:36.768514516 +0200
@@ -21,7 +21,7 @@
  */
 ?>
 <?php UI::show_box_top(T_('Adding a New User'), 'box box_add_user'); ?>
-<?php Error::display('general'); ?>
+<?php AmpError::display('general'); ?>
 <form name="add_user" enctype="multpart/form-data" method="post" action="<?php echo Config::get('web_path') . "/admin/users.php?action=add_user"; ?>">
 <table class="tabledata" cellspacing="0" cellpadding="0">
 <tr>
@@ -30,7 +30,7 @@
     </td>
     <td>
         <input type="text" name="username" size="30" maxlength="128" value="<?php echo scrub_out($_POST['username']); ?>" />
-        <?php Error::display('username'); ?>
+        <?php AmpError::display('username'); ?>
     </td>
 </tr>
 <tr>
@@ -53,7 +53,7 @@
     </td>
     <td>
         <input type="password" name="password_1" size="30" value="" />
-        <?php Error::display('password'); ?>
+        <?php AmpError::display('password'); ?>
     </td>
 </tr>
 <tr>
Index: ampache-alioth/templates/show_edit_access.inc.php
===================================================================
--- ampache-alioth.orig/templates/show_edit_access.inc.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/templates/show_edit_access.inc.php	2016-09-10 09:10:36.768514516 +0200
@@ -48,12 +48,12 @@
 <tr>
     <td><?php echo T_('Start'); ?>:</td>
     <td>
-        <?php Error::display('start'); ?>
+        <?php AmpError::display('start'); ?>
         <input type="text" name="start" value="<?php echo $access->f_start; ?>" size="20" />
     </td>
     <td><?php echo T_('End'); ?>:</td>
     <td>
-        <?php Error::display('end'); ?>
+        <?php AmpError::display('end'); ?>
         <input type="text" name="end" value="<?php echo $access->f_end; ?>" size="20" />
     </td>
 </tr>
Index: ampache-alioth/templates/show_edit_user.inc.php
===================================================================
--- ampache-alioth.orig/templates/show_edit_user.inc.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/templates/show_edit_user.inc.php	2016-09-10 09:10:36.768514516 +0200
@@ -21,7 +21,7 @@
  */
 ?>
 <?php UI::show_box_top(T_('Editing existing User')); ?>
-<?php Error::display('general'); ?>
+<?php AmpError::display('general'); ?>
 <form name="update_user" enctype="multipart/form-data" method="post" action="<?php echo Config::get('web_path') . "/admin/users.php"; ?>">
 <table class="tabledata" cellspacing="0" cellpadding="0">
 <tr>
@@ -33,7 +33,7 @@
     </td>
     <td>
         <input type="text" name="username" size="30" maxlength="128" value="<?php echo scrub_out($client->username); ?>" />
-        <?php Error::display('username'); ?>
+        <?php AmpError::display('username'); ?>
     </td>
 </tr>
 <tr>
@@ -56,7 +56,7 @@
     </td>
     <td>
         <input type="password" name="password_1" size="30" value="" />
-        <?php Error::display('password'); ?>
+        <?php AmpError::display('password'); ?>
     </td>
 </tr>
 <tr>
Index: ampache-alioth/templates/show_install.inc.php
===================================================================
--- ampache-alioth.orig/templates/show_install.inc.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/templates/show_install.inc.php	2016-09-10 09:10:36.768514516 +0200
@@ -30,7 +30,7 @@
         <?php echo T_('Step 2 - Create ampache.cfg.php'); ?><br />
         <?php echo T_('Step 3 - Set up the initial account'); ?><br />
         <br />
-        <?php Error::display('general'); ?>
+        <?php AmpError::display('general'); ?>
         <br />
         <span class="header2"><?php echo T_('Insert Ampache Database'); ?></span>
         <form method="post" action="<?php echo $web_path . "/install.php?action=create_db&amp;htmllang=$htmllang&amp;charset=$charset"; ?>" enctype="multipart/form-data" >
Index: ampache-alioth/templates/show_install_account.inc.php
===================================================================
--- ampache-alioth.orig/templates/show_install_account.inc.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/templates/show_install_account.inc.php	2016-09-10 09:10:36.768514516 +0200
@@ -29,7 +29,7 @@
     <dl>
     <dd><?php echo T_('This step creates your initial Ampache admin account. Once your admin account has been created you will be redirected to the login page.'); ?></dd>
     </dl>
-    <?php Error::display('general'); ?>
+    <?php AmpError::display('general'); ?>
     <br />
     <span class="header2"><?php echo T_('Create Admin Account'); ?></span>
     <form method="post" action="<?php echo $web_path . "/install.php?action=create_account&amp;htmllang=$htmllang&amp;charset=$charset"; ?>" enctype="multipart/form-data" >
Index: ampache-alioth/templates/show_install_config.inc.php
===================================================================
--- ampache-alioth.orig/templates/show_install_config.inc.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/templates/show_install_config.inc.php	2016-09-10 09:10:36.772514541 +0200
@@ -32,11 +32,11 @@
         <dd><?php printf(T_('This step takes the basic config values and generates the config file. If your config/ directory is writable, you can select "write" to have Ampache write the config file directly to the correct location. If you select "download" it will prompt you to download the config file, and you can then manually place the config file in %s'), $prefix . '/config'); ?></dd>
         </dl>
         <?php echo T_('Step 3 - Set up the initial account'); ?><br />
-        <?php Error::display('general'); ?>
+        <?php AmpError::display('general'); ?>
         <br />
 
 <span class="header2"><?php echo T_('Generate Config File'); ?></span>
-<?php Error::display('config'); ?>
+<?php AmpError::display('config'); ?>
 <form method="post" action="<?php echo $web_path . "/install.php?action=create_config"; ?>" enctype="multipart/form-data" >
 <table>
 <tr>
Index: ampache-alioth/templates/show_install_lang.inc.php
===================================================================
--- ampache-alioth.orig/templates/show_install_lang.inc.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/templates/show_install_lang.inc.php	2016-09-10 09:10:36.772514541 +0200
@@ -27,7 +27,7 @@
 <div class="content">
     <strong><?php echo T_('Choose Installation Language'); ?></strong>
     <p>
-    <?php Error::display('general'); ?>
+    <?php AmpError::display('general'); ?>
     </p>
 <form method="post" action="<?php echo $web_path . "/install.php?action=init"; ?>" enctype="multipart/form-data" >
 
Index: ampache-alioth/templates/show_login_form.inc.php
===================================================================
--- ampache-alioth.orig/templates/show_login_form.inc.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/templates/show_login_form.inc.php	2016-09-10 09:10:36.772514541 +0200
@@ -69,7 +69,7 @@
       </div>
 
             <?php echo Config::get('login_message'); ?>
-            <?php Error::display('general'); ?>
+            <?php AmpError::display('general'); ?>
 
         <div class="formValidation">
             <a class="button" id="lostpasswordbutton" href="<?php echo Config::get('web_path'); ?>/lostpassword.php"><?php echo T_('Lost password'); ?></a>
Index: ampache-alioth/templates/show_user_registration.inc.php
===================================================================
--- ampache-alioth.orig/templates/show_user_registration.inc.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/templates/show_user_registration.inc.php	2016-09-10 09:10:36.772514541 +0200
@@ -61,7 +61,7 @@
     
     <div class="agreementCheckbox">
         <input type='checkbox' name='accept_agreement' /> <?php echo T_('I Accept'); ?>
-        <?php Error::display('user_agreement'); ?>
+        <?php AmpError::display('user_agreement'); ?>
     </div>
 </div>
 <?php } // end if user_agreement ?>
@@ -69,25 +69,25 @@
 <div class="registerfield require">
     <label for="username"><?php echo T_('Username'); ?>: <span class="asterix">*</span></label>
     <input type='text' name='username' id='username' value='<?php echo scrub_out($username); ?>' />
-    <?php Error::display('username'); ?>
-    <?php Error::display('duplicate_user'); ?>
+    <?php AmpError::display('username'); ?>
+    <?php AmpError::display('duplicate_user'); ?>
 </div>
 <div class="registerfield require">
     <label for="fullname"><?php echo T_('Full Name'); ?>: <span class="asterix">*</span></label>
     <input type='text' name='fullname' id='fullname' value='<?php echo scrub_out($fullname); ?>' />
-    <?php Error::display('fullname'); ?>
+    <?php AmpError::display('fullname'); ?>
 </div>
 
 <div class="registerfield require">
     <label for="email"><?php echo T_('E-mail'); ?>: <span class="asterix">*</span></label>
     <input type='text' name='email' id='email' value='<?php echo scrub_out($email); ?>' />
-    <?php Error::display('email'); ?>
+    <?php AmpError::display('email'); ?>
 </div>
 
 <div class="registerfield require">
     <label for="password"><?php echo T_('Password'); ?>: <span class="asterix">*</span></label>
     <input type='password' name='password_1' id='password_1' />
-    <?php Error::display('password'); ?>
+    <?php AmpError::display('password'); ?>
 </div>
 
 <div class="registerfield require">
@@ -101,7 +101,7 @@
 
 <?php if (Config::get('captcha_public_reg')) { ?>
             <?php  echo captcha::form("&rarr;&nbsp;"); ?>
-            <?php Error::display('captcha'); ?>
+            <?php AmpError::display('captcha'); ?>
 <?php } ?>
 
 <div class="registerButtons">
Index: ampache-alioth/update.php
===================================================================
--- ampache-alioth.orig/update.php	2016-09-10 09:10:36.772514541 +0200
+++ ampache-alioth/update.php	2016-09-10 09:10:36.772514541 +0200
@@ -58,7 +58,7 @@
     <div class="notify">
 <?php printf(T_('This page handles all database updates to Ampache starting with <strong>3.3.3.5</strong>. According to your database your current version is: <strong>%s</strong>.'), Update::format_version($version)); ?>
 <?php echo T_('the following updates need to be performed'); ?><br /><br />
-<div style="font-size:1.2em;font-weight:bold;text-align:center;"><?php Error::display('general'); ?></div>
+<div style="font-size:1.2em;font-weight:bold;text-align:center;"><?php AmpError::display('general'); ?></div>
     </div>
     <div class="content">
 <?php Update::display_update(); ?>
Index: ampache-alioth/lib/class/error.class.php
===================================================================
--- ampache-alioth.orig/lib/class/error.class.php	2016-09-10 09:10:36.772514541 +0200
+++ /dev/null	1970-01-01 00:00:00.000000000 +0000
@@ -1,139 +0,0 @@
-<?php
-/* vim:set softtabstop=4 shiftwidth=4 expandtab: */
-/**
- *
- * LICENSE: GNU General Public License, version 2 (GPLv2)
- * Copyright 2001 - 2013 Ampache.org
- *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License v2
- * as published by the Free Software Foundation.
- *
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANT ABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
- * GNU General Public License for more details.
- *
- * You should have received a copy of the GNU General Public License
- * along with this program; if not, write to the Free Software
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
- *
- */
-
-/**
- * Error class
- *
- * This is the baic error class, its better now that we can use php5
- * hello static functions and variables
- *
- */
-class Error {
-
-    private static $state = false; // set to one when an error occurs
-    private static $errors = array(); // Errors array key'd array with errors that have occured
-
-    /**
-     * __constructor
-     * This does nothing... amazing isn't it!
-     */
-    private function __construct() {
-
-        // Rien a faire
-
-    } // __construct
-
-    /**
-     * __destruct
-     * This saves all of the errors that are left into the session
-     */
-    public function __destruct() {
-
-
-        foreach (self::$errors as $key=>$error) {
-            $_SESSION['errors'][$key] = $error;
-        }
-
-    } // __destruct
-
-    /**
-     * add
-     * This is a public static function it adds a new error message to the array
-     * It can optionally clobber rather then adding to the error message
-     */
-    public static function add($name,$message,$clobber=0) {
-
-        // Make sure its set first
-        if (!isset(Error::$errors[$name])) {
-            Error::$errors[$name] = $message;
-            Error::$state = 1;
-            $_SESSION['errors'][$name] = $message;
-        }
-        // They want us to clobber it
-        elseif ($clobber) {
-            Error::$state = 1;
-            Error::$errors[$name] = $message;
-            $_SESSION['errors'][$name] = $message;
-        }
-        // They want us to append the error, add a BR\n and then the message
-        else {
-            Error::$state = 1;
-            Error::$errors[$name] .= "<br />\n" . $message;
-            $_SESSION['errors'][$name] .=  "<br />\n" . $message;
-        }
-
-    } // add
-
-    /**
-     * occurred
-     * This returns true / false if an error has occured anywhere
-     */
-    public static function occurred() {
-
-        if (self::$state == '1') { return true; }
-
-        return false;
-
-    } // occurred
-
-    /**
-     * get
-     * This returns an error by name
-     */
-    public static function get($name) {
-
-        if (!isset(Error::$errors[$name])) { return ''; }
-
-        return Error::$errors[$name];
-
-    } // get
-
-    /**
-     * display
-     * This prints the error out with a standard Error class span
-     * Ben Goska: Renamed from print to display, print is reserved
-     */
-    public static function display($name) {
-
-        // Be smart about this, if no error don't print
-        if (!isset(Error::$errors[$name])) { return ''; }
-
-        echo '<span class="error">' . Error::$errors[$name] . '</span>';
-
-    } // display
-
-    /**
-      * auto_init
-     * This loads the errors from the session back into Ampache
-     */
-    public static function auto_init() {
-
-        if (!is_array($_SESSION['errors'])) { return false; }
-
-        // Re-insert them
-        foreach ($_SESSION['errors'] as $key=>$error) {
-            self::add($key,$error);
-        }
-
-    } // auto_init
-
-} // Error
